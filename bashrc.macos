# vim:ft=sh

# bash completion from homebrew
if [ -f $(brew --prefix)/etc/bash_completion ]; then
  . $(brew --prefix)/etc/bash_completion
fi

function find {
  if [ "$#" -lt 1 ]; then
    command find .
  else
    command find $*
  fi
}

# this doesn't seem to work at all but leaving for posterity
# use terminal-notifier instead
function growl() {
      local msg="\\e]9;\n\n${*}\\007"
      case $TERM in
        screen*)
          echo "using screen term escape codes"
          echo -ne '\eP'${msg}'\e\\' ;;
        *)
          echo -ne ${msg} ;;
      esac
      return
}

function notify() {
  local tmux_window=$(tmux display -pt $TMUX_PANE '#I')
  terminal-notifier -sound Default -subtitle "Window $tmux_window" -message $@
}

PS1='\h:\W$(__git_ps1 "(%s)") \u\$ ' # macosx style with git branch

# macos aliases
alias wgrab="curl --remote-name" # make wgrab cause curl to act like wget
alias gvim="mvim" # mvim is the shell script that ships with MacVim -- gvim is the x11 version
alias tcopy="reattach-to-user-namespace pbcopy"


# MacOSX -> based on BSD
# BSD uses posix coreutils
# you can install coreutils from ports/fink/homebrew and have access to them all
# normal port location /opt/local/libexec/gnubin
# normal brew location /usr/local/opt/coreutils/libexec/gnubin
# or g{old command name}

# gnu aliases
alias ls="gls --color=auto"
alias find="gfind"
alias dircolors="gdircolors"
alias pip="pip2.7"

# color-ls initialization (taken from /etc/profile.d/colorls.sh on linux)

# newer version os osx ls support color via env var
CLICOLOR=1

# need this on mavericks to avoid some clang compiler warnings
ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future

COLORS=/etc/DIR_COLORS
[ -e "/etc/DIR_COLORS.$TERM" ] && COLORS="/etc/DIR_COLORS.$TERM"
[ -e "$HOME/.dircolors" ] && COLORS="$HOME/.dircolors"
[ -e "$HOME/.dir_colors" ] && COLORS="$HOME/.dir_colors"
[ -e "$HOME/.dircolors.$TERM" ] && COLORS="$HOME/.dircolors.$TERM"
[ -e "$HOME/.dir_colors.$TERM" ] && COLORS="$HOME/.dir_colors.$TERM"
[ -e "$COLORS" ] || return

eval `dircolors --sh "$COLORS" 2>/dev/null`

PATH=/usr/local/bin:/usr/local/sbin:/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/grep/libexec/gnubin:$PATH
export PATH

# rbenv setup
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi
